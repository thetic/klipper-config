[extruder]
max_extrude_cross_section: 5

[firmware_retraction]

[exclude_object]

[gcode_macro SMART_PARK]
description: Parks your printhead near the print area for pre-print hotend heating.
variable_z_height: 10
variable_purge_margin: 10
gcode:
    # Create center point of x for fallback
    {% set center_x = printer.toolhead.axis_maximum.x / 2 | float %}

    # Create center point of y for fallback
    {% set center_y = printer.toolhead.axis_maximum.y / 2 | float %}
    {% set axis_minimum_x = printer.toolhead.axis_minimum.x | float %}
    {% set axis_minimum_y = printer.toolhead.axis_minimum.y | float %}

    # Gather all object points
    {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
    {% set x_min = all_points | map(attribute=0) | min | default(center_x) %}
    {% set y_min = all_points | map(attribute=1) | min | default(center_y) %}
    {% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}

    # If objects are detected and purge margin
    {% if purge_margin > 0 and x_min != center_x and y_min != center_y %}
        # value is greater than 0, move to purge location + margin
        {% set x_min = [ x_min - purge_margin , x_min ] | min %}
        {% set y_min = [ y_min - purge_margin , y_min ] | min %}
        {% set x_min = [ x_min , axis_minimum_x ] | max %}
        {% set y_min = [ y_min , axis_minimum_y ] | max %}
    {% endif %}

    {% if printer.toolhead.position.z < z_height %}
        # Move Z to park height if current Z position is lower than z_height
        G0 Z{z_height}
    {% endif %}

    # Move near object area
    G0 X{x_min} Y{y_min} F{travel_speed}
    G0 Z{z_height}


[gcode_macro LINE_PURGE]
description: A purge macro that adapts to be near your actual printed objects
variable_purge_height: 0.8                  # Z position of nozzle during purge, default is 0.8.
variable_purge_margin: 10                   # Distance the purge will be in front of the print area, default is 10.
variable_purge_amount: 30                   # Amount of filament to be purged prior to printing.
variable_flow_rate: 12                      # Flow rate of purge in mm3/s. Default is 12.
gcode:
    # Get relevant printer params
    {% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
    {% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}

    # Calculate purge origins and centers from objects
    {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
    {% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
    {% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
    {% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
    {% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}

    {% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
    {% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}

    {% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
    {% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}

    {% if tip_distance is not defined %}
        {% set tip_distance = printer['gcode_macro PRINT_END'].retract_distance|default(0) %}
    {% endif %}

    # Calculate purge speed
    {% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}

    SAVE_GCODE_STATE NAME=Prepurge_State

    {% if 'STATUS_CLEANING' in printer.gcode.commands %}
        STATUS_CLEANING
    {% endif %}

    # If there's room on Y, purge along X axis in front of print area
    {% if purge_y_origin > 0 %}

        G92 E0
        G0 F{travel_speed}
        G90
        G0 X{purge_x_center} Y{purge_y_origin}
        G0 Z{purge_height}
        M83
        G1 E{tip_distance} F{purge_move_speed}
        G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
        G10
        G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
        G92 E0
        M82
        G0 Z{purge_height * 2} F{travel_speed}

    # If there's room on X, purge along Y axis to the left of print area
    {% else %}

        G92 E0
        G0 F{travel_speed}
        G90
        G0 X{purge_x_origin} Y{purge_y_center}
        G0 Z{purge_height}
        M83
        G1 E{tip_distance} F{purge_move_speed}
        G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
        G10
        G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
        G92 E0
        M82
        G0 Z{purge_height * 2} F{travel_speed}

    {% endif %}

    {% if 'STATUS_READY' in printer.gcode.commands %}
        STATUS_READY
    {% endif %}

    RESTORE_GCODE_STATE NAME=Prepurge_State
