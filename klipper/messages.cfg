[respond]

[display_status]

[gcode_macro M117]
description: Set LCD Message
rename_existing: M99117
gcode:
    {% if rawparams %}
        # trim comments after a `;` or `#` and escape any existing `"`
        {% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
        SET_DISPLAY_TEXT MSG="{escaped_msg}"
        RESPOND TYPE=command MSG="{escaped_msg}"
    {% else %}
        SET_DISPLAY_TEXT
    {% endif %}


[gcode_macro MR_NOTIFY]
description: Allows you to send a custom notification via Mobileraker without using the M117 command
gcode:
    {% set title = params.TITLE | default('$printer_name') %}
    {% set msg = "MR_NOTIFY:" ~ (title ~ "|" if 'TITLE' in params|upper else "") ~ params.MESSAGE %}

    {% if 'MESSAGE' in params|upper %}
        { action_respond_info(msg) }
    {% else %}
        { action_raise_error('Must provide MESSAGE parameter') }
    {% endif %}


[gcode_macro DUMP_WARNINGS]
description: Debug: Print all warning messages from klipper
gcode:
    {% set parameters = ["printer.configfile.warnings:"] %}
    {% for warning in printer.configfile.warnings %}
        {% set parameters = parameters.append("%s -> %s -> %s\n%s" % (warning.type, warning.section, warning.option, warning.message)) %}
    {% endfor %}
    {action_respond_info(parameters|join("\n"))}

[gcode_macro DUMP_PARAMS]
gcode:
    {% for name1 in printer %}
        {% for name2 in printer[name1] %}
            {% if name1 == 'configfile' and name2 in ['settings', 'config'] %}
                # Big noise
            {% else %}
                { action_respond_info("printer['%s'].%s = %s"
                                      % (name1, name2, printer[name1][name2])) }
            {% endif %}
        {% else %}
            { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
        {% endfor %}
    {% endfor %}

