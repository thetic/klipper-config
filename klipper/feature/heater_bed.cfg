[heater_bed]

[gcode_macro CALIBRATE_BED]
description: Run heater bed calibration
gcode:
    {%
        set TARGET =
        params.TARGET if 'TARGET' in params
        else printer["gcode_macro PRINT_START"].default_bed_temp
        | float
    %}
    M117 Calibrating bed heater for {TARGET}C

    {% set algo = printer.configfile.settings.heater_bed.control %}
    {% if algo == 'mpc' %}
        MPC_CALIBRATE HEATER=heater_bed TARGET={TARGET} {rawparams}
    {% elif algo == 'pid' %}
        PID_CALIBRATE HEATER=heater_bed TARGET={TARGET} {rawparams}
    {% else %}
        {action_raise_error("Cannot tune algorithm: " + algo)}
    {% endif %}

[gcode_macro M190]
description: Wait for Bed Temperature
rename_existing: M99190
gcode:
    {% set s = params.S | default(0) | float %}

    {% if s < printer.heater_bed.temperature %}
        {% if 'STATUS_COOLING_BED' in printer.gcode.commands %}
            STATUS_COOLING_BED
        {% endif %}
    {% else %}
        {% if 'STATUS_HEATING_BED' in printer.gcode.commands %}
            STATUS_HEATING_BED
        {% endif %}
    {% endif %}

    {% set algo = printer.configfile.settings.heater_bed.control %}
    {% if algo == 'mpc' %}
        # Set bed temp
        M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
        {% if s != 0 %}
            # Wait for bed temp (within n degrees)
            TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-2} MAXIMUM={s+5}
        {% endif %}
    {% else %}
        # Normal M190
        M99190 S{s}
    {% endif %}

    # Set status
    {% if 'STATUS_READY' in printer.gcode.commands %}
        STATUS_READY
    {% endif %}

