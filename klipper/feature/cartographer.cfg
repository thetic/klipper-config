[scanner]
# serial: /dev/serial/by-id/usb-cartographer_cartographer_...
# canbus_uuid: ...
x_offset: ...
y_offset: ...
calibration_method: touch
sensor: cartographer

[temperature_sensor cartographer]
sensor_type: temperature_mcu
sensor_mcu: scanner

[stepper_z]
# endstop_pin: probe:z_virtual_endstop
homing_retract_dist: 0

[safe_z_home]
home_xy_position: ...
z_hop: 10

[adxl345 cartographer]
cs_pin: scanner:PA3
spi_bus: spi1
axes_map: x, -y, z

[bed_mesh]
speed: ...
probe_count: ...
zero_reference_position: ...

[gcode_macro CARTOGRAPHER_TOUCH]
description: Home in TOUCH mode
rename_existing: _CARTOGRAPHER_TOUCH
gcode:
    {% if 'STATUS_CALIBRATING_Z' in printer.gcode.commands %}
        STATUS_CALIBRATING_Z
    {% endif %}

    _CARTOGRAPHER_TOUCH {rawparams}

    {% if 'STATUS_READY' in printer.gcode.commands %}
        STATUS_READY
    {% endif %}

[gcode_macro CARTOGRAPHER_CALIBRATE]
description: Calibrate cartographer response curve
rename_existing: _CARTOGRAPHER_CALIBRATE
gcode:
    {% if 'STATUS_CALIBRATING_Z' in printer.gcode.commands %}
        STATUS_CALIBRATING_Z
    {% endif %}
    _CARTOGRAPHER_CALIBRATE {rawparams}
    {% if 'STATUS_READY' in printer.gcode.commands %}
        STATUS_READY
    {% endif %}

[gcode_macro CARTOGRAPHER_ESTIMATE_BACKLASH]
description: Estimate Z axis backlash
rename_existing: _CARTOGRAPHER_ESTIMATE_BACKLASH
gcode:
    {% if 'STATUS_BUSY' in printer.gcode.commands %}
        STATUS_BUSY
    {% endif %}
    _CARTOGRAPHER_ESTIMATE_BACKLASH {rawparams}
    {% if 'STATUS_READY' in printer.gcode.commands %}
        STATUS_READY
    {% endif %}
