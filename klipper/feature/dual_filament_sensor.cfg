[filament_switch_sensor toolhead]
switch_pin: ...
pause_on_runout: False


[filament_switch_sensor entry]
switch_pin: ...
pause_on_runout: False
insert_gcode:
    {% if printer.print_stats.state in ["paused", "printing"] %}
        RESPOND MSG="Filament inserted"
        LOAD_FILAMENT
    {% endif %}
runout_gcode:
    {% if
        (printer.print_stats.state == "printing") and
        printer['filament_switch_sensor toolhead'].filament_detected and
        not printer['filament_switch_sensor entry'].filament_detected
    %}
        PAUSE
        {% if 'M300' in printer.gcode.commands %}
            M300
        {% endif %}
        RESPOND TYPE=error msg="FILAMENT RUNOUT !!"
        _FS_DISABLE
        _UNLOAD_FILAMENT_START
        _FS_ENABLE
    {% endif %}


[gcode_macro M412]
description: Disable Filament Runout Detection
gcode:
    {% if "S" not in params %}
        {% if printer["filament_switch_sensor toolhead"].enabled %}
            {action_respond_info("Filament runout ON")}
        {% else %}
            {action_respond_info("Filament runout OFF")}
        {% endif %}
    {% elif params.S | int %}
        _FS_ENABLE
    {% else %}
        _FS_DISABLE
    {% endif %}


[gcode_macro _FS_ENABLE]
description: Enable Toolhead Filament Sensor
gcode:
    SET_FILAMENT_SENSOR SENSOR=toolhead ENABLE=1


[gcode_macro _FS_DISABLE]
description: Disable Toolhead Filament Sensor
gcode:
    SET_FILAMENT_SENSOR SENSOR=toolhead ENABLE=0


################################################################################
# Load/Unload
################################################################################

[gcode_macro LOAD_FILAMENT]
description: Initiate a filament load
# variable_purge_retries:           5
# variable_filament_load_length:    5
variable_loaded: False
gcode:
    SAVE_GCODE_STATE NAME=LOAD_FILAMENT_state
    M83 #Relative extrusions
   _LOW_TEMP_CHECK
    {% for step in range(10) %}
        _LOAD_FILAMENT_MOVE_TO_TOOLHEAD_SENSOR
    {% endfor %}
   _LOAD_FILAMENT_PURGE


[gcode_macro M701]
description: Initiate a filament load
gcode: LOAD_FILAMENT


[gcode_macro UNLOAD_FILAMENT]
description: Initiate a filament unload
gcode:
    {% set TEMP = params.TEMP|default(printer["gcode_macro PRINT_START"].default_nozzle_temp)|float %}
    {% set DISTANCE = params.DISTANCE|default(105)|float %}

    M400 #CLEAR_BUFFER
    SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state
    _LOW_TEMP_CHECK T={TEMP}
    M82 #ABSOLUTE_EXTRUSION

    ; Filament tip shaping sequence
    G92 E0 #RESET_EXTRUDER
    G1 E2 F3600
    G1 E0 F3600
    G1 E3 F3600
    G1 E0 F3600
    G1 E4 F3600
    G1 E0 F3600

    M83 #RELATIVE_EXTRUSION
    G1 E-20 F3600
    G4 P3000
    G1 E{DISTANCE|float * -1} F3000
    RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state


[gcode_macro M702]
description: Initiate a filament unload
gcode: UNLOAD_FILAMENT


[gcode_macro _LOW_TEMP_CHECK]
description: Check the nozzle is at temperature and heat it if needed
gcode:
    {% set T = params.T|default(printer["gcode_macro PRINT_START"].default_nozzle_temp)|float %}
    {% if printer.extruder.temperature < printer.extruder.target %}
        M109 S{printer.extruder.target|float}
    {% elif printer.extruder.target < T %}
        M109 S{T}
    {% endif %}


[gcode_macro _LOAD_FILAMENT_MOVE_TO_TOOLHEAD_SENSOR]
gcode:
    {% set FLL = printer["gcode_macro LOAD_FILAMENT"].filament_load_length|default(5) %}
    {% if not printer['filament_switch_sensor toolhead'].filament_detected %}
        G1 E{FLL} F1200
    {% endif %}


[gcode_macro _LOAD_FILAMENT_PURGE]
variable_current_purge_retries:   0
gcode:
    {% set PURGE = printer["gcode_macro PURGE"].purge_amount %}
    {% set MAX_RETRIES = printer["gcode_macro LOAD_FILAMENT"].purge_retries|default(5) %}
    {% set FLOW = printer["gcode_macro PURGE"].flow_rate %}
    {% set FSPEED = (60*FLOW)/2.405 %}

    M83 #Relative extrusions

    {% if current_purge_retries < MAX_RETRIES %}
        M400 # Wait for buffer to clear
        G1 E{PURGE} F{FSPEED}
        _LOAD_FILAMENT_PROMPT_START
    {% else %}
        _LOAD_FILAMENT_PROMPT_ERROR
    {% endif %}


[gcode_macro _LOAD_FILAMENT_PROMPT_START]
gcode:
    {% set RETRIES = printer["gcode_macro _LOAD_FILAMENT_PURGE"].current_purge_retries %}
    SET_GCODE_VARIABLE MACRO=_LOAD_FILAMENT_PURGE VARIABLE=current_purge_retries VALUE={ RETRIES + 1 }
    RESPOND TYPE=command MSG="action:prompt_begin Question"
    RESPOND TYPE=command MSG="action:prompt_text Is the filament loaded and extruding correctly?"
    RESPOND TYPE=command MSG="action:prompt_button Yes|_LOAD_FILAMENT_END"
    RESPOND TYPE=command MSG="action:prompt_button No|_LOAD_FILAMENT_PURGE"
    RESPOND TYPE=command MSG="action:prompt_show"


[gcode_macro _LOAD_FILAMENT_PROMPT_ERROR]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Error:"
    RESPOND TYPE=command MSG="action:prompt_text Maximum number of retries, Check toolhead"
    RESPOND TYPE=command MSG="action:prompt_button Ok|_LOAD_FILAMENT_PROMPT_END"
    RESPOND TYPE=command MSG="action:prompt_show"


[gcode_macro _LOAD_FILAMENT_PROMPT_END]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_LOAD_FILAMENT_PURGE VARIABLE=current_purge_retries VALUE=0
    RESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state


[gcode_macro _LOAD_FILAMENT_END]
gcode:
    {% set RETRACT = printer["gcode_macro PRINT_END"].retract_distance | default(0) %}
    G1 E{RETRACT} F1800
    _LOAD_FILAMENT_PROMPT_END


[gcode_macro _UNLOAD_FILAMENT_START]
variable_loaded: False
gcode:
    _LOW_TEMP_CHECK
    _UNLOAD_FILAMENT_PROMPT_START


[gcode_macro _UNLOAD_FILAMENT_PROMPT_START]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Notice:"
    RESPOND TYPE=command MSG="action:prompt_text Filament runout triggered, press ok to unload filament."
    RESPOND TYPE=command MSG="action:prompt_button Ok|UNLOAD_FILAMENT"
    RESPOND TYPE=command MSG="action:prompt_show"
