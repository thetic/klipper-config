[pause_resume]

[gcode_macro _pr_TRY_MACRO]
gcode:
    {% if params.NAME in printer.gcode.commands %}
        {params.NAME}
    {% endif %}

[idle_timeout]
timeout: 1200
gcode:
    {% if printer.pause_resume.is_paused %}
        M117 Idle, turning off hotend
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
    {% else %}
        TURN_OFF_HEATERS
        _pr_TRY_MACRO NAME=FILTER_OFF
        _pr_TRY_MACRO NAME=STATUS_OFF
        M84
        M117
    {% endif %}

[virtual_sdcard]
on_error_gcode: CANCEL_PRINT

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: _PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}  # z hop amount

    {% if printer.pause_resume.is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer.extruder.target}

        _pr_TRY_MACRO NAME=STATUS_STANDBY
        _pr_TRY_MACRO NAME=FILAMENT_SENSOR_DISABLE
        SAVE_GCODE_STATE NAME=PAUSE  # save current print position for resume
        _PAUSE

        # raise Z by hop amount
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
            G91
            G1 Z{z} F900
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}

        # park toolhead at front center
        G90
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000

        # save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        SAVE_GCODE_STATE NAME=PAUSEPARK

        # Unload if there's a runout
        {% if 'filament_switch_sensor filament' in printer %}
            {% if printer['filament_switch_sensor filament'].filament_detected|int == 0 %}
                _pr_TRY_MACRO NAME=UNLOAD_FILAMENT
            {% endif %}
        {% endif %}

        M104 S0  # turn off hotend

        SET_IDLE_TIMEOUT TIMEOUT=43200  # 12 hours
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: _RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}  # hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        _pr_TRY_MACRO NAME=FILAMENT_SENSOR_ENABLE
        _pr_TRY_MACRO NAME=STATUS_BUSY

        # restore idle timeout
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}

        # Reheat hotend
        {% if etemp > 0 %}
            M109 S{etemp|int}
        {% endif %}

        # go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100

        # prime nozzle and lower Z back down
        G91
        M83
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900
        {% else %}
            G1 Z{zhop * -1} F900
        {% endif %}

        # restore position
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60

        _pr_TRY_MACRO NAME=STATUS_PRINTING
        _RESUME
    {% endif %}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: _CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} # Restore idle timeout
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    _CANCEL_PRINT

[gcode_macro REHEAT]
description: Reheat the nozzle after a pause
gcode:
    {% set etemp = printer['gcode_macro RESUME'].etemp|int %}
    {% if printer['pause_resume'].is_paused|int == 1 %}
        # set timeout back to configured value
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
        {% if etemp > 0 %}
            # heat the hotend back up
            M104 S{etemp}
        {% endif %}
    {% endif %}

[gcode_macro M600]
description: Filament change
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    M300
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state